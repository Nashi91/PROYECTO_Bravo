
--TRIGGERS Y PAs

--1) En caso de que un personaje muera, debera de ser eliminado del registro y almacenarse en un registro a parte. [TRGHelper_PlayerCharDeath]
CREATE TRIGGER TRGHelper_PlayerCharDeath ON PERSONAJES
INSTEAD OF DELETE
AS
-- Se hace una comprobación de si el personaje existe en dicha tabla.
	IF EXISTS (SELECT * FROM PERSONAJES 
	WHERE PERSONAJES.USUARIO = (SELECT USUARIO FROM DELETED))
	PRINT 'ERROR EL PERSONAJE NO EXISTE EN LA TABLA :V'
	ELSE
--Si la tabla no existe se crea otra donde se insertan los personajes muertos.
	IF EXISTS (SELECT * FROM SYSOBJECTS WHERE NAME = 'DEAD_CHARACTERS')
		CREATE TABLE DEAD_CHARACTERS(
		usuario NVARCHAR(15),
		nombre NVARCHAR(30),
		apellido1 NVARCHAR(30),
		apellido2 NVARCHAR(30),
		raza NVARCHAR(15),
		genero VARCHAR(9),
		religion NVARCHAR(15),
		historia NVARCHAR(MAX),
		dinero INT,
		clase NVARCHAR(15),
		magia NVARCHAR(10),
		reino NVARCHAR(35)
		)

		INSERT INTO DEAD_CHARACTERS
		SELECT * FROM PERSONAJES
		WHERE PERSONAJES.USUARIO IN (SELECT USUARIO FROM DELETED)
-- En el caso de existir un rey o legado, con esto comprobamos de que existe tal rey o legado.

	IF EXISTS (SELECT REY FROM REINOS WHERE REINOS.REY = (SELECT USUARIO FROM DELETED))
		EXEC SProc_RulerDeath (SELECT USUARIO FROM DELETED)
	
	IF EXISTS (SELECT LEGADO FROM REINOS WHERE REINOS.LEGADO = (SELECT USUARIO FROM DELETED))	
	BEGIN
		UPDATE REINOS
		SET LEGADO = NULL
		WHERE REINOS.LEGADO = (SELECT LEGADO FROM DELETED)
	END
	
	DELETE PERSONAJES -- Hacemos su correspondiente eliminación.
	FROM PERSONAJES
	WHERE PERSONAJES.USUARIO IN (SELECT USUARIO FROM DELETED)

--2)Dada la destruccion de un reino, todos sus territorios deberan volverse tierra de nadie. [SProc_KngdmDestroyed]
CREATE PROCEDURE SProc_KngdmDestroyed
@KINGDOM_DEAD NVARCHAR(25)
AS
	UPDATE TERRITORIOS
	SET REINO = NULL
	WHERE TERRITORIOS.REINO = @KINGDOM_DEAD

--3) La fecha de fin de un evento debera ser siempre posterior respetando un minimo de un dia respecto a la fecha de inicio
CREATE TRIGGER EVENTS_DATES ON EVENTOS
INSTEAD OF UPDATE
AS
	IF (SELECT FECHA_INICIO FROM DELETED) = (SELECT FECHA_FIN FROM INSERTED) -- Comprobar que no se ha modificado nada para poder actualizar.
	BEGIN
		 IF DATEDIFF(DAY,(SELECT FECHA_FIN FROM INSERTED),(SELECT FECHA_INICIO FROM EVENTOS WHERE EVENTOS.CODEVNT = (SELECT CODEVNT FROM DELETED)))
		UPDATE EVENTOS
		SET CODEVNT = (SELECT CODEVNT FROM INSERTED),
		NOMBRE = (SELECT NOMBRE FROM INSERTED),
		UBICACION = (SELECT UBICACION FROM INSERTED),
		DETALLES = (SELECT DETALLES FROM INSERTED),
		COSTE = (SELECT COSTE FROM INSERTED),
		FECHA_INICIO = (SELECT FECHA_INICIO FROM INSERTED),
		FECHA_FIN = (SELECT FECHA_FIN FROM INSERTED)
		WHERE CODEVNT = (SELECT CODEVNT FROM DELETED)
	END
	ELSE
	BEGIN
		PRINT 'LA FECHA DE FIN ES MENOR QUE LA DE INICIO'
	END
	BEGIN
		PRINT 'LA FECHA DE INICIO ES MAYOR QUE LA DE FIN'
	END
	BEGIN
		UPDATE EVENTOS
		SET CODEVNT = (SELECT CODEVNT FROM INSERTED),
		NOMBRE = (SELECT NOMBRE FROM INSERTED),
		UBICACION = (SELECT UBICACION FROM INSERTED),
		DETALLES = (SELECT DETALLES FROM INSERTED),
		COSTE = (SELECT COSTE FROM INSERTED),
		FECHA_INICIO = (SELECT FECHA_INICIO FROM INSERTED),
		FECHA_FIN = (SELECT FECHA_FIN FROM INSERTED)
		WHERE CODEVNT = (SELECT CODEVNT FROM DELETED)
	END

--4) Los usuarios administradores nunca pueden ser eliminados.
CREATE TRIGGER ROOTS ON USUARIOS
INSTEAD OF DELETE
AS
	IF (SELECT TIPO FROM DELETED)=2
	BEGIN
		PRINT 'NO SE PUEDEN ELIMINAR USUARIOS ADMINISTRADORES'
	END
	ELSE
	BEGIN
		DELETE USUARIOS
		FROM USUARIOS
		WHERE USUARIOS.USUARIO = (SELECT USUARIO FROM DELETED)
	END

--5) Los reinos unicamente podran ser declarados por usuarios administradores
CREATE TRIGGER KINGDOM_ROOTS ON REINOS
INSTEAD OF INSERT
-- Hacemos una comprobación de que el usuario sea root o no... Si no lo es no puede declarar los reinos
AS
	IF (SELECT TIPO FROM USUARIOS WHERE USUARIOS.USUARIO=(SELECT CREADO_POR FROM INSERTED))<>2
		--o <>2
	BEGIN
		PRINT 'ERROR, EL USUARIO NO ES ROOT :V'
	END
	ELSE
	BEGIN
		INSERT INTO REINOS
		SELECT * FROM INSERTED
	END


